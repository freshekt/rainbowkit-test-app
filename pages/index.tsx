import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { GetServerSideProps, InferGetServerSidePropsType } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { useQuery } from '@tanstack/react-query';
import {
  convertABIToContract,
  getContractABI,
  getContractModel,
} from '../shared/services/bscscan.service';
import { ContractModel } from '../shared/models/contract.model';
import Main from './Main';
import { ContractAbi } from 'web3';
import { useEffect, useRef, useState } from 'react';

type Props = {
  abi: ContractAbi;
  contractId: string | undefined;
};

export const getServerSideProps = (async () => {
  const abi = await getContractABI(
    process.env.REACT_APP_SMART_CONTRACT_ID || '',
    process.env.REACT_APP_API_KEY || ''
  );
  return {
    props: {
      abi,
      contractId: process.env.REACT_APP_SMART_CONTRACT_ID,
    },
  };
}) satisfies GetServerSideProps<Props>;

export default function Home({
  abi,
  contractId,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const [contract, setContract] = useState<ContractModel | undefined>();

  useEffect(() => {
    if (abi && contractId) {
      const newContract = convertABIToContract(abi, contractId);
      setContract(newContract);
    }
  }, [abi, contractId]);

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <ConnectButton.Custom>
        {(props) => <Main {...props} contract={contract} />}
      </ConnectButton.Custom>
      <ToastContainer />
    </div>
  );
}
