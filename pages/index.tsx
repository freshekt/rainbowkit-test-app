import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { GetServerSideProps, InferGetServerSidePropsType } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { useQuery } from '@tanstack/react-query';
import { getContractABI } from '../shared/services/bscscan.service';
import { ContractModel } from '../shared/models/contract.model';
import Main from './Main';

type Props = {
  contractId: string | undefined;
  apiKey: string | undefined;
};

export const getServerSideProps = (async () => {
  return Promise.resolve({
    props: {
      contractId: process.env.REACT_APP_SMART_CONTRACT_ID,
      apiKey: process.env.REACT_APP_API_KEY,
    },
  });
}) satisfies GetServerSideProps<Props>;

export default function Home({
  contractId,
  apiKey,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const {
    isLoading,
    isError,
    data: contract,
    error,
    refetch,
  } = useQuery<ContractModel, Error>({
    queryKey: ['contract', contractId, apiKey],
    queryFn: () => getContractABI(contractId || '', apiKey || ''),
  });

  if (isError) {
    toast.error(error.message);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <ConnectButton.Custom>
        {(props) => <Main {...props} contract={contract} />}
      </ConnectButton.Custom>
      <ToastContainer />
    </div>
  );
}
